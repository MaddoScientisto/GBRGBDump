@page "/settings"
@using System.Xml.Linq

@inject IFileDialogService FileDialogService
@inject IEnvironmentService LocalEnvironment
@inject NavigationManager Navigation
@inject ISettingsService SettingsService

<Card Padding="Padding.Is0.OnMobile">
    <CardBody>
        <SettingsFragment @bind-Model="@Model"></SettingsFragment>
    </CardBody>
    <CardFooter>
        <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is1.OnMobile">
            <Button Color="Color.Success" Clicked="Submit">Save</Button>
        </Field>
    </CardFooter>

</Card>

<Button Color="Color.Warning" Clicked="ShowNewSettings">Show New Settings Editor</Button>

@code {

    [SupplyParameterFromForm] private SettingsModel? Model { get; set; }
    [Inject] public IModalService ModalService { get; set; }

    protected override void OnInitialized() =>
        Model ??= SettingsService.LoadSettings() ?? new()
        {
            // Set defaults here
            ChannelOrder = ChannelOrder.Sequential,
            AverageType = AverageTypes.Normal
        };

    private void Submit()
    {
        SettingsService.SaveSettings(Model!);
        Navigation.NavigateTo("/");
    }

    private async Task ShowNewSettings()
    {
        await ModalService.Show<SettingsEditor>(Model!.PresetName, _builder =>
            {
                _builder.Add(_modal => _modal.Model, Model);

                _builder.Add(_modal => _modal.OnSuccess, async (settingsModel) =>
                {
                    await ModalService.Hide();
                    Model = settingsModel;
                    // Do processing after returning from modal, save settings

                    
                    // Do the end here
                });
            }, new ModalInstanceOptions()
            {
                Size = ModalSize.Fullscreen,
            });
    }

}