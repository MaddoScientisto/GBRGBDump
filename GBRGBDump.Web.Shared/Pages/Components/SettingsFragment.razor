@inject IEnvironmentService LocalEnvironment
@inject IFileDialogService FileDialogService

<ModalTitle>Paths</ModalTitle>
<Fields Padding="Padding.Is0.OnMobile" Margin="Margin.Is0.OnMobile">
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Input File Path</FieldLabel>
        <FieldBody Margin="Margin.Is0.OnMobile">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Model!.InputPath" Padding="Padding.Is1.OnMobile">

                    </TextEdit>
                </Addon>
                @if (LocalEnvironment.IsDesktop)
                {
                    <Addon AddonType="AddonType.End">
                        <Button Color="Color.Secondary" Clicked="SelectInput">...</Button>
                    </Addon>
                }
            </Addons>
            <FieldHelp Display="Display.None.Block.OnMobile">Insert a valid path from the host machine. This is ignored in scripted mode and the value is obtained from the script result.</FieldHelp>

        </FieldBody>
    </Field>
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Output Folder Path</FieldLabel>
        <FieldBody>
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Model!.OutputPath" Padding="Padding.Is1.OnMobile">

                    </TextEdit>
                </Addon>
                @if (LocalEnvironment.IsDesktop)
                {
                    <Addon AddonType="AddonType.End">
                        <Button Color="Color.Secondary" Clicked="SelectOutput">...</Button>
                    </Addon>
                }
            </Addons>
            <FieldHelp Display="Display.None.Block.OnMobile">Insert a valid path from the host machine</FieldHelp>

        </FieldBody>
    </Field>


</Fields>

<ModalTitle>Image Settings</ModalTitle>

<Fields>
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
        <FieldLabel>RGB Merge Mode</FieldLabel>
        <FieldBody>
            <Select @bind-SelectedValue="@Model!.ChannelOrder">
                <SelectItem Value="ChannelOrder.None">None</SelectItem>
                <SelectItem Value="ChannelOrder.Sequential">Sequential (RRR GGG BBB)</SelectItem>
                <SelectItem Value="ChannelOrder.Interleaved">Interleaved (RGB RGB RGB)</SelectItem>
            </Select>
        </FieldBody>
    </Field>
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        <FieldLabel>HDR Type</FieldLabel>
        <FieldBody Margin="Margin.Is0.OnMobile">
            <Select @bind-SelectedValue="@Model!.AverageType">
                <SelectItem Value="AverageTypes.None">None</SelectItem>
                <SelectItem Value="AverageTypes.Normal">Normal</SelectItem>
                <SelectItem Value="AverageTypes.FullBank">Full</SelectItem>
            </Select>
            <FieldHelp Display="Display.None.Block.OnMobile">This is ignored if RGB Merge is set to None.</FieldHelp>
            <FieldHelp Display="Display.None.Block.OnMobile">Full Mode does an extra Average step between both groups in a bank.</FieldHelp>
        </FieldBody>
    </Field>

    <Field Horizontal>
        <FieldLabel>AEB Step</FieldLabel>
        <FieldBody>
            <NumericPicker @bind-Value="@Model!.AebStep" />
        </FieldBody>
    </Field>

    <Field>
        <FieldLabel>Output Size</FieldLabel>
        <FieldBody>
            <NumericPicker @bind-Value="@Model!.OutputSize" />
        </FieldBody>
    </Field>
</Fields>

<ModalTitle>Pre-Processing</ModalTitle>

<Fields Padding="Padding.Is0.OnMobile" Margin="Margin.Is0.OnMobile">
    @* Enabled *@
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        @*  <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Enabled</FieldLabel> *@
        <FieldBody>
            <Switch TValue="bool" @bind-Checked="@Model!.PreScript.Enabled">Enabled</Switch>
        </FieldBody>
    </Field>

    @* Fail on error *@
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        @*  <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Enabled</FieldLabel> *@
        <FieldBody>
            <Switch TValue="bool" @bind-Checked="@Model!.PreScript.FailOnError">Fail on Error</Switch>
        </FieldBody>
    </Field>

    @* Path *@
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Path</FieldLabel>
        <FieldBody Margin="Margin.Is0.OnMobile">
            <TextEdit @bind-Text="@Model!.PreScript.Path" Padding="Padding.Is1.OnMobile">

            </TextEdit>
            <FieldHelp Display="Display.None.Block.OnMobile">Help Description here</FieldHelp>

        </FieldBody>
    </Field>

    @* Run Location *@
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Run Location</FieldLabel>
        <FieldBody Margin="Margin.Is0.OnMobile">
            <TextEdit @bind-Text="@Model!.PreScript.RunLocation" Padding="Padding.Is1.OnMobile">

            </TextEdit>
            <FieldHelp Display="Display.None.Block.OnMobile">Help Description here</FieldHelp>

        </FieldBody>
    </Field>

    @* Arguments *@
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
        <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Arguments</FieldLabel>
        <FieldBody Margin="Margin.Is0.OnMobile">
            <TextEdit @bind-Text="@Model!.PreScript.Arguments" Padding="Padding.Is1.OnMobile">

            </TextEdit>
            <FieldHelp Display="Display.None.Block.OnMobile">Help Description here</FieldHelp>

        </FieldBody>
    </Field>
</Fields>

<ModalTitle>Pico GB Printer</ModalTitle>

<Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile" Margin="Margin.Is0.OnMobile">
    <FieldLabel Margin="Margin.Is0.OnMobile" TextSize="TextSize.Small.OnMobile.Default.OnTablet">Web Address</FieldLabel>
    <FieldBody Margin="Margin.Is0.OnMobile">
        <TextEdit @bind-Text="@Model!.PrinterAddress" Padding="Padding.Is1.OnMobile">

        </TextEdit>
        <FieldHelp Display="Display.None.Block.OnMobile">Insert here the address for the pico gb printer web interface, generally http://192.168.7.1</FieldHelp>

    </FieldBody>
</Field>

@code {
    [Parameter] public SettingsModel? Model { get; set; }
    [Parameter]
    public EventCallback<SettingsModel> ModelChanged { get; set; }

    private async Task SelectInput()
    {
        var selectedPath = FileDialogService.OpenFileDialog();
        if (!string.IsNullOrWhiteSpace(selectedPath))
        {
            Model!.InputPath = selectedPath;
        }
    }

    private async Task SelectOutput()
    {
        var selectedPath = FileDialogService.OpenFolderDialog();
        if (!string.IsNullOrWhiteSpace(selectedPath))
        {
            Model!.OutputPath = selectedPath;
        }
    }
}
