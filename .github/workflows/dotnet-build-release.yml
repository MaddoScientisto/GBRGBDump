name: Build and Release .NET App

on:
  push:
    branches:
      - master
      - beta
  workflow_dispatch:
concurrency: production
permissions: 
  contents: write

jobs:
  # GitVersion_v6_cross_job:
  #   name: GitVersion v6 (cross job)
  #   runs-on: ubuntu-latest
  #   outputs:
  #     branchName: ${{ steps.version_step.outputs.branchName }}
  #     fullSemVer: ${{ steps.version_step.outputs.fullSemVer }}

  #     GitVersion_BranchName: ${{ steps.version_step.outputs.GitVersion_BranchName }}
  #     GitVersion_FullSemVer: ${{ steps.version_step.outputs.GitVersion_FullSemVer }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Install GitVersion
  #       uses: gittools/actions/gitversion/setup@v3.0.0
  #       with:
  #         versionSpec: '6.x'

  #     - name: Determine Version
  #       id: version_step # step id used as reference for output values
  #       uses: gittools/actions/gitversion/execute@v3.0.0     

  build-gbrgbdump-gui:
    runs-on: ubuntu-latest
    outputs:
       branchName: ${{ steps.version_step.outputs.branchName }}
       fullSemVer: ${{ steps.version_step.outputs.fullSemVer }}
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        cache: true
        cache-dependency-path: '**/packages.lock.json'
    
    - name: Restore dependencies
      run: dotnet restore --locked-mode

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '6.x'

    - name: Determine Version
      id: version_step # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.0.0

    - name: Update Version
      uses: gittools/actions/gitversion/command@v3.0.0
      with:
        arguments: /updateprojectfiles

    - name: Build GBRGBDump.GUI
      run: |
        dotnet publish ./GBRGBDump.GUI/GBRGBDump.GUI.csproj --configuration Release --runtime win-x64 --self-contained true -p:PublishSingleFile=true --output publish/GBRGBDump.GUI/win-x64

    - name: Build GBRGBDump WebUi
      run: |
        dotnet publish ./GBRGBDump.Web.GUI/GBRGBDump.Web.GUI.csproj --configuration Release --runtime win-x64--self-contained true -p:PublishSingleFile=true --output publish/GBRGBDump-webui/win-x64

    - name: Upload WebUi Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GBRGBDump-webui-win-x64
        path: publish/GBRGBDump-webui/win-x64/**
        if-no-files-found: error

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GBRGBDump-GUI-win-x64
        path: publish/GBRGBDump.GUI/win-x64/**
        if-no-files-found: error

  build-gbrgbdump:
    runs-on: ubuntu-latest
    # Avoid running time-expensive matrix build if the GUI fails
    needs: build-gbrgbdump-gui
    strategy:
        matrix:
            include:
                - { runtime: 'win-x64', output: 'win-x64' }
                - { runtime: 'linux-x64', output: 'linux-x64' }
                - { runtime: 'linux-arm', output: 'linux-arm' }
                - { runtime: 'linux-arm64', output: 'linux-arm64' }

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        cache: true
        cache-dependency-path: '**/packages.lock.json'

    - name: Restore dependencies
      run: dotnet restore --locked-mode

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '6.x'

    - name: Update Version
      uses: gittools/actions/gitversion/command@v3.0.0
      with:
        arguments: /updateprojectfiles

    - name: Build GBRGBDump
      run: |
        dotnet publish ./GBRGBDump/GBRGBDump.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true --output publish/GBRGBDump/${{ matrix.output }}

    - name: Build GBRGBDump Web
      run: |
        dotnet publish ./GBRGBDump.Web/GBRGBDump.Web.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true --output publish/GBRGBDump-web/${{ matrix.output }}

    - name: Upload Web Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GBRGBDump-web-${{ matrix.output }}
        path: publish/GBRGBDump-web/${{ matrix.output }}/**
        if-no-files-found: error

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GBRGBDump-${{ matrix.output }}
        path: publish/GBRGBDump/${{ matrix.output }}/**
        if-no-files-found: error

  publish-release:
    needs: [build-gbrgbdump, build-gbrgbdump-gui]
    runs-on: ubuntu-latest
    steps:
    - uses: dawidd6/action-download-artifact@v6
      with:
        path: artifacts
        skip_unpack: true
        if_no_artifact_found: fail
        workflow_conclusion: ""
    # Debug step
    - name: Display structure of downloaded files
      run: ls -R

    # - name: Create Release
    #   id: create_release
    #   uses: elgohr/Github-Release-Action@v5
    #   env:
    #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag: ${{ github.run_number }}
    #     title: Release ${{ github.run_number }}

    # - name: Minor version for each merge
    #   id: AutoTagger
    #   uses: anothrNick/github-tag-action@1.36.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     WITH_V: true
    #     CUSTOM_TAG: ${{ needs.build-gbrgbdump-gui.outputs.fullSemVer }}

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./artifacts/**
        tag_name: ${{ needs.build-gbrgbdump-gui.outputs.fullSemVer }}
        # upload_url: ${{ steps.create_release.outputs.upload_url }}
        # asset_path: ./artifacts
        # asset_name: Release-Assets.zip
        # asset_content_type: application/zip