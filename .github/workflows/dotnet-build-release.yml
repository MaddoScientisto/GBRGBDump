name: Build and Release .NET App

on:
  #push:
  #  branches:
  #    - master
  workflow_dispatch:

jobs:
  build-gbrgbdump:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            include:
                - { runtime: 'win-x64', output: 'win-x64' }
                - { runtime: 'linux-x64', output: 'linux-x64' }
                - { runtime: 'linux-arm', output: 'linux-arm' }
                - { runtime: 'linux-arm64', output: 'linux-arm64' }
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build GBRGBDump
      run: |
        dotnet publish ./GBRGBDump/GBRGBDump.csproj --configuration Release --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true --output publish/GBRGBDump/${{ matrix.output }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: GBRGBDump-${{ matrix.output }}
        path: publish/GBRGBDump/${{ matrix.output }}/**
        if-no-files-found: error

  build-gbrgbdump-gui:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Build GBRGBDump.GUI
      run: |
        dotnet publish ./GBRGBDump.GUI/GBRGBDump.GUI.csproj --configuration Release --runtime win-x64 --self-contained true -p:PublishSingleFile=true --output publish/GBRGBDump.GUI/win-x64

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: GBRGBDump-GUI-win-x64
        path: publish/GBRGBDump.GUI/win-x64/**
        if-no-files-found: error

  publish-release:
    needs: [build-gbrgbdump, build-gbrgbdump-gui]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
        #merge-multiple: true
        pattern: GBRGBDump-*
    # Debug step
    - name: Display structure of downloaded files
      run: ls -R artifacts

    # - name: Create Release
    #   id: create_release
    #   uses: elgohr/Github-Release-Action@v5
    #   env:
    #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag: ${{ github.run_number }}
    #     title: Release ${{ github.run_number }}

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      #env:
      #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./artifacts/**
        # upload_url: ${{ steps.create_release.outputs.upload_url }}
        # asset_path: ./artifacts
        # asset_name: Release-Assets.zip
        # asset_content_type: application/zip